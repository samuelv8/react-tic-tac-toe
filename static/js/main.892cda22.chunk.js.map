{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","redux/store.js","redux/reducers/gameReducer.js","App.js","index.js"],"names":["Square","props","className","onClick","value","Board","cols","rows","i","push","map","j","squares","renderSquare","calculateWinner","lines","length","a","b","c","Game","useState","Array","fill","nextPlayer","posChanged","history","setHistory","stepNumber","setStepNumber","winnerPlayer","setWinnerPlayer","moves","step","move","desc","x","y","slice","jumpTo","disabled","status","hist","current","next","concat","handleClick","createStore","state","action","type","App","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.892cda22.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nSquare.propTypes = {\n    value: PropTypes.any,\n    onClick: PropTypes.func\n};\n\nfunction Square(props) {\n    return (\n        <button className='square' onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square.js';\nimport PropTypes from 'prop-types';\n\nBoard.propTypes = {\n    squares: PropTypes.array,\n    onClick: PropTypes.func\n}\n\nfunction Board(props) {\n    const renderSquare = (i) => {\n        return (\n            <Square\n                value={props.squares[i]}\n                onClick={() => props.onClick(i)}\n            />\n        );\n    }\n\n    const cols = [0, 1, 2];\n    const rows = [];\n    for (let i = 0; i < 3; i++) {\n        rows.push(<div className=\"board-row\">{\n            cols.map(j => renderSquare(i * 3 + j)) // hardcoded\n        }</div>)\n    }\n\n    return (\n        <div>\n            {rows}\n        </div>\n    );\n\n}\n\nexport default Board;","import React, { useState } from 'react';\nimport Board from './Board.js';\n\nfunction Game() {\n    const [history, setHistory] = useState(\n        [{\n            squares: Array(9).fill(null),\n            nextPlayer: 'X',\n            posChanged: null,\n        }]\n    );\n    const [stepNumber, setStepNumber] = useState(0);\n    const [winnerPlayer, setWinnerPlayer] = useState(null);\n\n    const handleClick = (i) => {\n        const hist = history.slice(0, stepNumber + 1);\n        const current = hist[hist.length - 1];\n        const squares = current.squares.slice();\n        if (squares[i] || winnerPlayer) {\n            return;\n        }\n        squares[i] = current.nextPlayer;\n        const next = setNextPlayer(current.nextPlayer);\n        setHistory(\n            hist.concat([{\n                squares: squares,\n                nextPlayer: next,\n                posChanged: { x: i % 3, y: 2 - ((i / 3) >> 0) } //hardcoded\n            }])\n        );\n        setStepNumber(hist.length);\n        setWinnerPlayer(calculateWinner(squares));\n    }\n\n    const jumpTo = (step) => {\n        const squares = history[step].squares.slice();\n        setStepNumber(step);\n        setWinnerPlayer(calculateWinner(squares));\n    }\n\n    const moves = history.map((step, move) => {\n        const desc = move ?\n            `Go to move #${move} (${step.posChanged.x}, ${step.posChanged.y})` :\n            'Go to game start';\n        return (\n            <li key={move}>\n                <button\n                    onClick={() => jumpTo(move)}\n                    disabled={stepNumber === move}\n                >\n                    {desc}\n                </button>\n            </li>\n        );\n    });\n\n    let status = '';\n    if (winnerPlayer) {\n        status = 'Winner: ' + winnerPlayer;\n    } else {\n        status = 'Next player: ' + history[stepNumber].nextPlayer;\n    }\n\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n                <Board\n                    squares={history[stepNumber].squares}\n                    onClick={(i) => handleClick(i)}\n                />\n            </div>\n            <div className=\"game-info\">\n                <div>{status}</div>\n                <ol>{moves}</ol>\n            </div>\n        </div>\n    );\n\n}\n\nfunction setNextPlayer(currentPlayer) {\n    switch (currentPlayer) {\n        case 'X':\n            return 'O';\n        default:\n            return 'X';\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nexport default Game;","import { createStore } from \"redux\";\nimport { gameReducer } from \"./reducers/gameReducer\";\n\nexport default createStore(gameReducer);","\nexport function gameReducer(state, action) {\n    switch(action.type) {\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport Game from './components/Game';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <Game />\n        </Provider>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}